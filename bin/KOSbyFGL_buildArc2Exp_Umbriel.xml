<?xml version="1.0" encoding="UTF-8" ?>  
<project name="FGLKosGitPrepareUmbriel" default="compile" basedir=".">

  <!-- set global properties for this build -->
  <!-- Example for using an environment variable, which is defined e.g. in windows: 
       <property name="build" value="${BUILDTARGET}"/> -->
  <!-- Beispiele fuer relative Pfade
  <property name="dest" value="target"/>
  <property name="src" value="src"/>
  -->
   
  <!-- Ausgangsverzeichnis: Das Repository -->
  <property name="dest.dirRepositoryKosPath" value="c:/1fgl/repository/KOS4Export" />
  <property name="dest.dirRepositoryKosNpp" value="Notepad++" />
  <!-- keine Testumgebung, wird nicht benötigt <property name="dest.dirRepositoryKosArchive" value="Archive" /> -->
  
  <!-- mit absoluten Pfaden hat das kopieren so nicht geklappt, erst wenn wie unten // vor der property steht, funktioniert es -->
  <!-- Achtung: verwende auch auf deutschen Systemen C:\Program Files (x86), Abaenderung in deutschen Namen Programme... bewirkt nur, das scheinbar das Verzeichnis doppelt angelegt wird. -->
  <!-- Datei KOSbyFGL.xml --> <!--"C:\Program Files (x86)\Notepad++\plugins\APIs\KOSbyFGL._orig.xml"-->  
  <property name="src.dirNpp_plugins_Path" value="c:/Program Files (x86)/Notepad++/plugins" />
  <property name="src.dirNpp_pluginsAPIs" value="APIs" />
  <property name="src.dirNpp_pluginsAPIsPath" value="${src.dirNpp_plugins_Path}/${src.dirNpp_pluginsAPIs}" />
 
  <!-- alle .txt Dateien, die ein juengeres Aenderungsdatum haben. Also die reinen KOS-Programdateien --> 
  <!-- Keine Testumgebung, wird nicht benötigt 
  <property name="src.dirKosArchive" value="Archive" /> 
  <property name="src.dirKosPath" value="C:/Spiel/ksp-win-0-23-0/KSP_win/Plugins/PluginData"/>
  <property name="src.dirKosArchivePath" value="${src.dirKosPath}/${src.dirKosArchive}" /> 
  -->
  
  <!-- Einstellungen für Notepad++ -->
  <!--userDefineLang.xml - this file contains all the definitions for user defined languages to be highlighted
  C:\Users\lindhaueradmin\AppData\Roaming\Notepad++\userDefineLang.xml
    
  config.xml - the GUI and MISC settings are stored in this file. 
  langs.xml - all the keywords of supported languages to be highlighted are in this file. 
  stylers.xml - all the syntax highlighting (colours, fonts, etc...) are saved in this file. 
  contextMenu.xml - the configure file of Notepad++ context menu.
  session.xml - the file which contains the list of full file path name of previous session. 
  shortcuts.xml - this file contains all the recorded macro, user defined commands and remapped shortcuts information. 
  -->
  <property name="src.dirNpp_AppData" value="Notepad++" />
  <property name="src.dirNpp_AppPath" value="C:/Users/fritz/AppData/Roaming" />
  <property name="src.dirNpp_AppDataPath" value="${src.dirNpp_AppPath}/${src.dirNpp_AppData}" />
  
  <!--weitere Einstellungsdateien von Notepad++
  allowAppDataPlugins.xml - a zero length file which, if present, will allow plugins installed in %APPDATA\Notepad++\plugins to be loaded as well as "local" plugins. This behaviour is configurable from the last install wizard page. And it is as easy to change as deleting/creating a file. 
  asNotepad.xml - a zero length file which is use to make Notepad++ behaviour similar to MS Notepad (ie. always open a file in a new instance with single document interface). 
  toolbarIcons.xml - this file will enable you to customise the icons on your toolbar - but not the set of buttons. See Toolbar Customisation for more on this topic. 
  nativeLang.xml - When using a localization from Settings -> Preferences -> Global, the corresponding file from the Localizations subfolder is copied to nativeLang.xml and elements of the user interface are being translated. The localization files are described in Localisation. 
  -->
  <!-- im notepad++ ordner
  doLocalConf.xml - a zero length file which is use to determinate where Notepad++ loads the xml files. 
  -->
  
    <!-- Die erstellten Backup - zip Dateien sollten ausserhalb des Git Repositories sein -->
  <property name ="dest.dirRepositoryKosBackupPath" value="${dest.dirRepositoryKosPath}Backups" />
  <target name="init">
    <!-- Create the time stamp -->
	<echo>Receiving timestamp:</echo>
    <!--<tstamp/>-->
	<tstamp>
	<format property="current.time" pattern="yyyyMMdd_HHmmss" locale="en,GB"/>	
	<!-- keine Testumgebung, wird nicht benötigt <format property="backup_RepositoryArchive.name" pattern="'${dest.dirRepositoryKosArchive}'yyyyMMdd_HHmmss'.zip'" locale="en,GB"/> -->
	<format property="backup_RepositoryNpp.name" pattern="'${dest.dirRepositoryKosNpp}'yyyyMMdd_HHmmss'.zip'" locale="en,GB"/>
	</tstamp>
	<echo>Current Timestamp: ${current.time}</echo>
	<!-- keine Testumgebung, wird nicht benötigt <echo>Backup-Filename: ${backup_RepositoryArchive.name}</echo> -->
	<echo>Backup-Notepad++: ${backup_RepositoryNpp.name}</echo>
  </target>
  
  <target name="compile" depends="init,KosRepositoryNpp">
    <!-- Keine Testumgebung, wird nicht benötigt <target name="compile" depends="init,KosRepositoryArchive,KosRepositoryNpp"> -->
    <!-- Compile the java code from ${src} into ${build} -->
	<!-- example how to create a directory -->
    <!-- <mkdir dir="${build}"/>
	-->
    
	<!-- Example how to use a java compile task to compile files from a source file directory (containing .java files) to a build file directory (containig .class files) -->
	<!-- <javac debug="yes" srcdir="${src}" destdir="${build}">
    	<classpath refid="project.classpath"/>
    </javac>
	-->
  </target>

<target name="KosRepositoryNpp">
<!-- Example of howto change file modification date, usefull to enforce 'overwrite' -->
	<!-- <touch>
	  <fileset dir="${dest.dir}"/>
	</touch>
	-->
	
	<echo>Notepad++</echo>
	<mkdir dir="//${dest.dirRepositoryKosPath}"/>
	<mkdir dir="//${dest.dirRepositoryKosPath}/${dest.dirRepositoryKosNpp}" />
	<mkdir dir="//${dest.dirRepositoryKosBackupPath}"/>
	
	<!-- Mache vom Zielverzeichnis ein Backup -->
	  <zip destfile="//${dest.dirRepositoryKosBackupPath}/${backup_RepositoryNpp.name}"
       basedir="//${dest.dirRepositoryKosPath}/${dest.dirRepositoryKosNpp}"
	   includes="KOSbyFGL.xml contextMenu.xml functionList.xml langs.xml session.xml shortcuts.xml stylers.xml userDefineLang.xml"
	/>
	
	<!-- damit die Aenderung: Datei wurde geloescht mitbekommen wird, alle Dateien (nur die xml-dateien!!!) nach dem Backup loeschen -->
	<delete includeemptydirs="false">
		<fileset dir="//${dest.dirRepositoryKosPath}/${dest.dirRepositoryKosNpp}" includes="**/*.xml"/>
	</delete>
	
	<!-- Kopiere Dateien vom Ausgangsverzeichnis / NPP Plugins (nur ältere Dateien werden überschrieben, obwohl alle .xml Dateien schon gelöscht sein sollten.)-->
	<echo>NPP Plugins API Directory:</echo>
	<copy todir="//${dest.dirRepositoryKosPath}/${dest.dirRepositoryKosNpp}" overwrite="false" preservelastmodified="true"> <!-- Dateien, die neuer sind, werden nicht ueberschrieben -->	  
	  <fileset dir="//${src.dirNpp_pluginsAPIsPath}">
		<include name="**/**KOSbyFGL.xml"/>
	  </fileset>
	</copy>

	<!-- HIER NIX LOESCHEN, das Ziel ist das gleiche Verzeichnis wie oben. -->
	<!-- damit die Aenderung: Datei wurde geloescht mitbekommen wird, alle Dateien (nur die Programmdateien!!!)erst loeschen -->
	<!-- <delete includeemptydirs="false">
		<fileset dir="//${dest.dirKosArchivePath}" includes="**/*.txt"/>
	</delete> -->
	
	<!-- Kopiere NPP Konfigurationsdateien (nur ältere Dateien werden überschrieben, obwohl alle .xml Dateien schon gelöscht sein sollten.)-->
		<!-- Folgende Dateien werden beim Wechsel des Rechners immer geändert, das hat aber keinen spürbaren positiven Effekt
        <include name="**/**config.xml"/><include name="**/**session.xml"/>
  -->
	<echo>NPP AppDAta Directory:</echo>
	<copy todir="//${dest.dirRepositoryKosPath}/${dest.dirRepositoryKosNpp}" overwrite="false" preservelastmodified="true"> <!-- Dateien, die neuer sind, werden nicht ueberschrieben -->	  
	  <fileset dir="//${src.dirNpp_AppDataPath}">
		<include name="**/**contextMenu.xml"/>
		<include name="**/**functionList.xml"/>
		<include name="**/**langs.xml"/>
		<include name="**/**shortcuts.xml"/>
		<include name="**/**stylers.xml"/>
		<include name="**/**userDefineLang.xml"/>
	  </fileset>
	</copy>
</target>

<!-- Keine Testumgebung, wird nicht benötigt -->
<target name="KosRepositoryArchive">
	<echo>KosRepository Archive:</echo>
	<!-- Example of howto change file modification date, usefull to enforce 'overwrite' -->
	<!-- <touch>
	  <fileset dir="${dest.dir}"/>
	</touch>
	-->

	<echo>Kos Files:</echo><!-- Nur die programmdateien kopieren. Nicht die xml / batch files fuer Ant oder fuer die Sprache kopieren. -->
	<mkdir dir="//${dest.dirRepositoryKosPath}"/>
	<mkdir dir="//${dest.dirRepositoryKosPath}/${dest.dirRepositoryKosArchive}" />
	<mkdir dir="//${dest.dirRepositoryKosBackupPath}"/>
	
	<!-- Mache vom Zielverzeichnis ein Backup -->
	<zip destfile="//${dest.dirRepositoryKosBackupPath}/${backup_RepositoryArchive.name}"
       basedir="//${dest.dirRepositoryKosPath}/${dest.dirRepositoryKosArchive}"
	/>
	
	<!-- damit die Aenderung: Datei wurde geloescht mitbekommen wird, alle Dateien (nur die Programmdateien!!!) nach dem Backup loeschen -->
	<delete includeemptydirs="false">
		<fileset dir="//${dest.dirRepositoryKosPath}/${dest.dirRepositoryKosArchive}" includes="**/*.txt"/>
	</delete>
	
	<!-- Dateien, die neuer sind, werden nicht ueberschrieben, obwohl alle txt - Dateien gelöscht worden sein sollen. -->	  
	<copy todir="//${dest.dirRepositoryKosPath}/${dest.dirRepositoryKosArchive}" overwrite="false"  preservelastmodified="true"> 
	  <fileset dir="//${src.dirKosArchivePath}">
		<include name="**/**.txt"/>		
	  </fileset>
	</copy>
</target>
</project>