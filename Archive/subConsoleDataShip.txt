//Merke: Man kann nur sinnvoll 1 Parameter (auch als Liste) uebergeben.  DECLARE PARAMETER iCount,targMain,listTarg To list().
DECLARE PARAMETER argsIn.
run DEBUG_Caller1("subConsoleDataShip").

//##########################
//In einer Schleife die Übergabebewerte den lokalen Variablen zuweisen.
//1. das Hauptziel aus der argsIn Liste holen.
run DEBUG_print0("Anzahl von Parametern in argsIn = " + argsIn:LENGTH).
set iIndex To -1.
for argIn IN argsIn {
	run DEBUG_print0("Wert: " + argIn). //argIn gilt nur innerhalb der Schleife...
	set iIndex to iIndex + 1.
	if iIndex = 0 {
		set headingplanedTemp to argIn.
		//run DEBUG_print0("in = " + targMain).
		}.	
	if iIndex >= 1 {
		set horizonplanedTemp to argIn.  //Fuelle die liste der sonstigen ziele
		//run DEBUG_print0("Weiteres Ziel = " + argIn).
		}.
	if iIndex = 2 {
		set headingshipTemp to argIn.
		}.
	 if iIndex = 3 {
	    set horizonshipTemp to argIn.
	 }. 
	 if iIndex = 4{
		set throttleshipTemp to argIn.
	 }.
}.
	

//### Konstanten
set constDegreeTxt to "G".
set constColumnA to 0.
set constColumnB to 20.

//1. Schiffsname
print langCountGlobal + ".|- " + SHIP + " -" at (constColumnA,langConsoleRowFirst + langConsoleShipOffset).
set height to ALT:RADAR.

//Die Werte für Pitch und Grade werden scheinbar manchmal vertauscht. Daher hier eine heuristische Lösung.
set throttleship to throttleshipTemp.
set horizonship to horizonshipTemp.
set headingship to headingshipTemp.
set horizonplaned to horizonplanedTemp.
set headingplaned to headingplanedTemp.	
if horizonshipTemp > 90 {
	set horizonship to headingshipTemp.
	set headingship to horizonshipTemp.
	//set horizonplaned to headingplanedTemp.	
	set horizonplaned to 0.	
	set headingplaned to horizonplanedTemp.
}.
if horizonshipTemp < -90 {
	set horizonship to headingshipTemp.
	set headingship to horizonshipTemp.
	//set horizonplaned to headingplanedTemp.	
	set horizonplaned to 05.	
	set headingplaned to horizonplanedTemp.
}.


//2. Aktuelle Werte
//Führungstextspalte ist 16 Zeichen breit, hinter jedem Wert extra Leerzeichen schreiben, um ggf. ältere Werte zu überschreiben, die eine kürzere Zeichenfolge haben.
print "   RadarHoehe= " + ROUND(height) + "      " at (constColumnA,langConsoleRowFirst + langConsoleShipOffset + 1). //Das klappt nur, wenn die Variable in einem "ueberprogramm" dekalriert ist und alle Variablen global sind....
print "     Throttle= " + ROUND(throttleship, 2) + "      " at (constColumnB,langConsoleRowFirst + langConsoleShipOffset + 1).
print "     EnuPitch= " + Round(horizonship,2)  + "      "   at (constColumnA,langConsoleRowFirst + langConsoleShipOffset + 2). 
print "      EnuGrade= " + Round(headingship,2)  + "      "   at (constColumnB,langConsoleRowFirst + langConsoleShipOffset + 2).

//3. Geplante Werte
print "  HorizonGoal: " + ROUND(horizonplaned,2) + "       " at(constColumnA,langConsoleRowFirst + langConsoleShipOffset + 3).
print "     GradeGoal: " + ROUND(headingplaned, 2) + "       " at (constColumnB,langConsoleRowFirst + langConsoleShipOffset + 3).

print "VerticalSpeed: " + ROUND(VERTICALSPEED,2) + "      " at (constColumnA,langConsoleRowFirst + langConsoleShipOffset + 4).
print "       Heading: " + ROUND(HEADING,2) + "          " at(constColumnB,langConsoleRowFirst + langConsoleShipOffset + 4).  //??? ist Heading != gradeShip ??? JA, ist momentan immer 0.
