clearscreen.
run langKernel. //Deklariere die "Language Konstanten."
set langCallerName to "job1".
run DEBUG_Caller(langCallerName).

//##################################
//### Nehme im Flug Kurs auf.... 
//##################################
run libKerbal. //Soll die globalen Variablen für den Planeten deklarieren.
run lib7p08.   //Deklariere die "Flugzeug Konstanten"

//TODO: 2 Zeilen Footer , davon 1 Trennlienie und von der Terminalgröße ausgehen.
//run subConsoleFooter.

//Merke: Paramter sind 
run STATUS_print("Nehme Kurs auf"). 
		
//auch dass geht nicht args:CLEAR. //KEIN SET DAVOR
set iHeightGoal to libHeightGoal. //Sets desired height of plane.
set iDistTargGoal to 2000. //Set desired distance to Target in meter.

set args TO LIST().
set args:add To iHeightGoal. 
set args:add TO iDistTargGoal.
set args:ADD to libTargKscRunEnd.
set args:add TO libTargPolNor. //Nordpol als Ziel

//Nun auf Höhe gehen und das Ziel ansteuern.
set prgPlaneFlight_Return to LIST(). //Rückgabewert
run prgPlaneFlight(args,prgPlaneFlight_Return).

//Prüfe den Status des Programms
//a) Rückgabwerte entgegennehmen.
set iIndex to -1.
set prgPlaneFlightStatus to "0".
for argReturn IN prgPlaneFlight_Return {
	set sReturn to argReturn.
	run DEBUG_print("ReturnWert: " + sReturn). //argReturn gilt nur innerhalb der Schleife...
	set iIndex to iIndex + 1.
	if iIndex = 0 {
		set prgPlaneFlightStatus to sReturn.		
		}.
	}.		
		
if prgPlaneFlightStatus = "1" {
	run DEBUG_print("Auf Kurs.").
	UNLOCK STEERING.
	}.	
if prgPlaneFlightStatus = "0" {
	run DEBUG_print("Nicht auf Kurs.").
	UNLOCK STEERING.
	}.
if prgPlaneFlightStatus = "-99" {
	run DEBUG_print( "ERROR beim Kursaufnehmen.").
	UNLOCK STEERING.
}.








