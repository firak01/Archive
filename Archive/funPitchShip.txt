 //Zählt die Anzahl der Elemente einer Liste.
//Der Befehl der Befehle set anzahl to argsIn:LENGTH gibt zwar die Anzahl der Elemente zurück.
//aber der Wert ist keine mathematische Zahl und kann z.B. mit einer echten Zahl nicht verglichen werden. 
//Der returnwert dieser Funktion funktioniert anschliessend!
DECLARE PARAMETER argsPitchShipIn, funPitchShip_Return.
run DEBUG_Caller1("funPitchShip").
set STATUSx to -999.
set funPitchShip_Return:ADD TO STATUSx.

//##########################
//In einer Schleife die Übergabebewerte den lokalen Variablen zuweisen.
//1. das Hauptziel aus der argsIn Liste holen.
run DEBUG_print0("Anzahl von Parametern in argsIn = " + argsIn:LENGTH).
set iIndex To -1.
for argIn IN argsPitchShipIn {
	run DEBUG_print0("Wert: " + argIn). //argIn gilt nur innerhalb der Schleife...
	set iIndex to iIndex + 1.
	if iIndex = 0 {
		set correction to argIn.
		}.	
	}.

//+++ In den hier verwendeten Funktionen werden globale Variablen verwendet
//Nicht löschen, beispiel für weitere Methode, wird ggf. für STEERINg-Programm wichtig.	
//set tfUnit To V(0,0,0).
//run tfDirToUnitV(NORTH).
//x/y/z= " + ROUND(tfUnit:x,2) + "/" +ROUND(tfUnit:y,2) + "/" + ROUND(tfUnit:z,2) 
 //set tfx to tfUnit:x.
 //set tfy to tfUnit:y.
 //set tfz to tfUnit:z.
 
 //MERKE: set tfUnit to PROGRADE. Hat als Struktur keine XYZ  Werte
 set tfA to LATITUDE.
 set tfUnit to VELOCITY:SURFACE.
 set tfx to tfUnit:x.
 set tfy to tfUnit:y.
 set tfz to tfUnit:z.
run tfXYZtoEnu(tfUnit:x, tfUnit:y, tfUnit:z).
//MERKE: Die inter verwendeten globalen Variablen   + "  | u/w/n/e= " + ROUND(tfU,2) + "/" + ROUND(tfW,2) + "/" +ROUND(tfN,2) + "/" + ROUND(tfE,2)


//Errechne den aktuellen Pitch-Wert:
if STATUS = "FLYING" {
	set horizontemp to ARCTAN2(tfE, tfN). //Wichtig, die Parameter müssen genau in dieser Reihenfolge stehen, sonst ist das Ergebnis nicht identisch mit dem, was auf dem NavBall steht.
}.
if STATUS = "PRELAUNCH" {
	set horizontemp to ARCTAN2(tfU, tfN). //Wichtig, die Parameter müssen genau in dieser Reihenfolge stehen, sonst ist das Ergebnis nicht identisch mit dem, was auf dem NavBall steht.
}.

if correction = "DOWN" {
set horizon to horizontemp.
if Round(horizontemp) < 0 { 
set horizon to 360 + horizontemp. 
}.
if ROUND(horizontemp) > 360 { 
set horizon to horizontemp - 360. 
}.
}.
if correction = "UP" {
  if horizontemp < -90 { set horizon to 3. }.
if horizontemp > 90 { set horizon to 2. }.

}.
		

//ABER: Gelandet/vor dem Start stimmt der Wert nicht
//STATUS              // Current situation: LANDED, SPLASHED, PRELAUNCH, FLYING, SUB_ORBITAL, ORBITING, ESCAPING, or DOCKED
if STATUS = "LANDED" { set horizon to 0. }.
if STATUS = "PRELAUNCH" { set horizon to 0. }.
run DEBUG_print0("Pitch  NORMIERT: " + horizon). //argIn gilt nur innerhalb der Schleife...


set funPitchShip_Return:REMOVE to 0.
set funPitchShip_Return:ADD TO horizon.